"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xqc4^!iqry$*2p3p@*19opb&%&e2g51ap5tc^wy2%@671nv*t0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','localhost','*','0.0.0.0','172.16.17.65','172.16.17.66','103.116.37.147','103.116.37.148']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'rag',
    'rest_framework',
    'knox',
    'corsheaders',
    'drf_yasg',  # Add drf-yasg for Swagger
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    #CORS MiddleWare
    'corsheaders.middleware.CorsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'knox.auth.TokenAuthentication',
    ],
}

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

AUTH_USER_MODEL = 'rag.User'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'rag.sqlite3',
    },
    'Dev': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'rag_dev',
        'USER': 'postgres',
        'PASSWORD': 'QP3HeJel62BPzPaq07uETezy',
        'HOST': 'e-commerce.cj3oddyv0bsk.us-west-1.rds.amazonaws.com',
        'PORT': '5432',
    },
    'Production': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'rag_production',
        'USER': 'postgres',
        'PASSWORD': 'QP3HeJel62BPzPaq07uETezy',
        'HOST': 'e-commerce.cj3oddyv0bsk.us-west-1.rds.amazonaws.com',
        'PORT': '5432',
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

OPENAI_API_KEY = 'sk-...'  # Replace with your actual OpenAI API key

SECURE_CROSS_ORIGIN_OPENER_POLICY=None

# Value determines whether the server allows cookies in the cross-site HTTP requests
CORS_ALLOW_CREDENTIALS = True

# Methods allowed for CORS
CORS_ALLOW_METHODS = [
    'DELETE',
    'OPTIONS',
    'PATCH',
    'GET',
    'POST',
    'PUT',  
]

# Non-standard headers allowed in the request
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

CORS_ORIGIN_WISHLIST = [
    'http://localhost:4200',
    'http://127.0.0.1:5000',
    'http://127.0.0.1:8000',
    '*',
    "http://172.16.17.65",
    "http://172.16.17.66",
    "http://103.116.37.147",
    "http://103.116.37.148",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://127.0.0.1:4200",
    "http://172.16.17.65",
    "http://172.16.17.66",
    "http://103.116.37.147",
    "http://103.116.37.148"
]

QDRANT_HOST = 'localhost'
QDRANT_PORT = '6333'